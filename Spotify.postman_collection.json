{
	"info": {
		"_postman_id": "e58b70c9-38eb-44cb-99ce-ee9772d5bb84",
		"name": "Spotify",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25540422"
	},
	"item": [
		{
			"name": "NegativeTests",
			"item": [
				{
					"name": "Subscribe To Track",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ids\": [\r\n        \"1\",\"2\",\"3\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/me/tracks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me",
								"tracks"
							],
							"query": [
								{
									"key": "market",
									"value": "za",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UnSubscribe To Track",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ids\": [\r\n        \"1\",\"2\",\"3\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/me/tracks?market=za",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me",
								"tracks"
							],
							"query": [
								{
									"key": "market",
									"value": "za"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PositiveTests",
			"item": [
				{
					"name": "Search Artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set artistsId to that of current artist\r",
									"var responseBody = pm.response.json();\r",
									"\r",
									"var token = responseBody.artists.items[0].id;\r",
									"\r",
									"pm.environment.set(\"artist_id\", token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Validate limit of 1\", function () {\r",
									"     var jsonData = pm.response.json();\r",
									"     pm.expect(jsonData.artists.items.length).to.equal(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{baseUrl}}/search?q=Jack Parow&type=artist&limit=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "Jack Parow"
								},
								{
									"key": "type",
									"value": "artist"
								},
								{
									"key": "limit",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Artist Top Tracks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var responseBody = pm.response.json();\r",
									"\r",
									"// Extract the desired value from the response body\r",
									"var token = responseBody.tracks[0].id;\r",
									"\r",
									"pm.environment.set(\"artist_top_track\", token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Validate top 10 trakcs\", function () {\r",
									"     var jsonData = pm.response.json();\r",
									"     pm.expect(jsonData.tracks.length).to.equal(10);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/artists/{{artist_id}}/top-tracks?market=za&limit=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"artists",
								"{{artist_id}}",
								"top-tracks"
							],
							"query": [
								{
									"key": "market",
									"value": "za"
								},
								{
									"key": "limit",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Saved Track",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Track should not be saved\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0]).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/me/tracks/contains?ids={{artist_top_track}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me",
								"tracks",
								"contains"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{artist_top_track}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Subscribe To Track",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ids\": [\r\n        \"{{artist_top_track}}\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/me/tracks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me",
								"tracks"
							],
							"query": [
								{
									"key": "market",
									"value": "za",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Saved Track After Sub",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Track should not be saved\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0]).to.eql(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/me/tracks/contains?ids={{artist_top_track}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me",
								"tracks",
								"contains"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{artist_top_track}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "UnSubscribe To Track",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ids\": [\r\n        \"{{artist_top_track}}\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/me/tracks?market=za",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me",
								"tracks"
							],
							"query": [
								{
									"key": "market",
									"value": "za"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Saved Track After Unsub",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Track should not be saved\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0]).to.eql(false);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/me/tracks/contains?ids={{artist_top_track}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me",
								"tracks",
								"contains"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{artist_top_track}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Playlist",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Jack Parow Playlist\",\r\n    \"description\": \"You will thank me later\",\r\n    \"public\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/{{userid}}/playlists",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"{{userid}}",
								"playlists"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessTokenUrl",
				"value": "{{tokenUrl}}",
				"type": "string"
			},
			{
				"key": "authUrl",
				"value": "{{authUrl}}",
				"type": "string"
			},
			{
				"key": "clientSecret",
				"value": "{{clientSecret}}",
				"type": "string"
			},
			{
				"key": "clientId",
				"value": "{{clientId}}",
				"type": "string"
			},
			{
				"key": "useBrowser",
				"value": true,
				"type": "boolean"
			},
			{
				"key": "redirect_uri",
				"value": "http://localhost:8888",
				"type": "string"
			},
			{
				"key": "grant_type",
				"value": "authorization_code",
				"type": "string"
			},
			{
				"key": "tokenName",
				"value": "token_1",
				"type": "string"
			},
			{
				"key": "scope",
				"value": "playlist-modify-public playlist-modify-private playlist-read-private playlist-read-collaborative user-read-private user-read-email user-library-read user-library-modify user-follow-read user-follow-modify user-read-playback-state user-modify-playback-state user-read-currently-playing user-read-recently-played",
				"type": "string"
			},
			{
				"key": "refreshRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "tokenRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "authRequestParams",
				"value": [],
				"type": "any"
			},
			{
				"key": "challengeAlgorithm",
				"value": "S256",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "queryParams",
				"type": "string"
			},
			{
				"key": "client_authentication",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}